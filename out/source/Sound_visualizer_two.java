/* autogenerated by Processing revision 1293 on 2024-05-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import ddf.minim.*;
import ddf.minim.analysis.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Sound_visualizer_two extends PApplet {




Minim minim;
AudioPlayer player;
FFT fft;
float[] smoothedFFT = new float[512];
float smoothedVolume = 0;

//obj vars



public void setup() {
  /* size commented out by preprocessor */;
  minim = new Minim(this);
  player = minim.loadFile("kienromance.wav");
  player.play();

  // Create an FFT object with a buffer size matching the audio player's buffer size
  fft = new FFT(player.bufferSize(), player.sampleRate());
}

public void draw() {
  background(0);

  // analyze
  fft.forward(player.mix);
  for(int i = 0; i < 512; i++){
    smoothedFFT[i] += (fft.getBand(i)-smoothedFFT[i])/2;
  }
  smoothedVolume += (player.mix.level()-smoothedVolume)/2;

  
}


  public void settings() { fullScreen(P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Sound_visualizer_two" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
